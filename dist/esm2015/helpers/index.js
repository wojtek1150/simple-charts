/**
 * @fileoverview added by tsickle
 * Generated from: helpers/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export const daysDiff = (/**
 * @param {?} start
 * @param {?} end
 * @return {?}
 */
(start, end) => Math.round((end - start) / (1000 * 60 * 60 * 24)));
/** @type {?} */
export const order = (/**
 * @param {?} items
 * @param {?} key
 * @return {?}
 */
(items, key) => items.sort((/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */
(a, b) => (a[key] > b[key]) ? 1 : ((b[key] > a[key]) ? -1 : 0))));
/** @type {?} */
export const max = (/**
 * @param {?} items
 * @param {?} key
 * @return {?}
 */
(items, key) => items.reduce((/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */
(a, b) => a[key] >= b[key] ? a : b), {}));
/** @type {?} */
export const axisYScale = (/**
 * @param {?} value
 * @return {?}
 */
(value) => {
    if (value <= 15) {
        return { maxValue: 15, scaleY: [15, 10, 5] };
    }
    if (value <= 30) {
        return { maxValue: 30, scaleY: [30, 20, 10] };
    }
    if (value <= 45) {
        return { maxValue: 45, scaleY: [45, 30, 15] };
    }
    if (value <= 60) {
        return { maxValue: 60, scaleY: [60, 40, 20] };
    }
    if (value <= 120) {
        return { maxValue: 120, scaleY: [120, 80, 40] };
    }
    /** @type {?} */
    const maxValue = Math.ceil(value / 100) * 100;
    /** @type {?} */
    const step = Math.ceil(maxValue / 3 / 10) * 10;
    return { maxValue, scaleY: [maxValue, maxValue - step, maxValue - step - step] };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ad29qdGVrMTE1MC9zaW1wbGUtY2hhcnRzLyIsInNvdXJjZXMiOlsiaGVscGVycy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNLE9BQU8sUUFBUTs7Ozs7QUFBRyxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFBOztBQUN6RixNQUFNLE9BQU8sS0FBSzs7Ozs7QUFBRyxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJOzs7OztBQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUE7O0FBQy9HLE1BQU0sT0FBTyxHQUFHOzs7OztBQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU07Ozs7O0FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRSxFQUFFLENBQUMsQ0FBQTs7QUFDdkYsTUFBTSxPQUFPLFVBQVU7Ozs7QUFBRyxDQUFDLEtBQUssRUFBMEQsRUFBRTtJQUMxRixJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7S0FDOUM7SUFDRCxJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FDL0M7SUFDRCxJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FDL0M7SUFDRCxJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FDL0M7SUFDRCxJQUFJLEtBQUssSUFBSSxHQUFHLEVBQUU7UUFDaEIsT0FBTyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDO0tBQ2pEOztVQUNLLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHOztVQUN2QyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUU7SUFDOUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxHQUFHLElBQUksRUFBRSxRQUFRLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7QUFDbkYsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRheXNEaWZmID0gKHN0YXJ0LCBlbmQpID0+IE1hdGgucm91bmQoKGVuZCAtIHN0YXJ0KSAvICgxMDAwICogNjAgKiA2MCAqIDI0KSk7XG5leHBvcnQgY29uc3Qgb3JkZXIgPSAoaXRlbXMsIGtleSkgPT4gaXRlbXMuc29ydCgoYSwgYikgPT4gKGFba2V5XSA+IGJba2V5XSkgPyAxIDogKChiW2tleV0gPiBhW2tleV0pID8gLTEgOiAwKSk7XG5leHBvcnQgY29uc3QgbWF4ID0gKGl0ZW1zLCBrZXkpID0+IGl0ZW1zLnJlZHVjZSgoYSwgYikgPT4gYVtrZXldID49IGJba2V5XSA/IGEgOiBiLCB7fSk7XG5leHBvcnQgY29uc3QgYXhpc1lTY2FsZSA9ICh2YWx1ZSk6IHsgc2NhbGVZOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIG1heFZhbHVlOiBudW1iZXIgfSA9PiB7XG4gIGlmICh2YWx1ZSA8PSAxNSkge1xuICAgIHJldHVybiB7IG1heFZhbHVlOiAxNSwgc2NhbGVZOiBbMTUsIDEwLCA1XSB9O1xuICB9XG4gIGlmICh2YWx1ZSA8PSAzMCkge1xuICAgIHJldHVybiB7IG1heFZhbHVlOiAzMCwgc2NhbGVZOiBbMzAsIDIwLCAxMF0gfTtcbiAgfVxuICBpZiAodmFsdWUgPD0gNDUpIHtcbiAgICByZXR1cm4geyBtYXhWYWx1ZTogNDUsIHNjYWxlWTogWzQ1LCAzMCwgMTVdIH07XG4gIH1cbiAgaWYgKHZhbHVlIDw9IDYwKSB7XG4gICAgcmV0dXJuIHsgbWF4VmFsdWU6IDYwLCBzY2FsZVk6IFs2MCwgNDAsIDIwXSB9O1xuICB9XG4gIGlmICh2YWx1ZSA8PSAxMjApIHtcbiAgICByZXR1cm4geyBtYXhWYWx1ZTogMTIwLCBzY2FsZVk6IFsxMjAsIDgwLCA0MF0gfTtcbiAgfVxuICBjb25zdCBtYXhWYWx1ZSA9IE1hdGguY2VpbCh2YWx1ZSAvIDEwMCkgKiAxMDA7XG4gIGNvbnN0IHN0ZXAgPSBNYXRoLmNlaWwobWF4VmFsdWUgLyAzIC8gMTApICogMTA7XG4gIHJldHVybiB7IG1heFZhbHVlLCBzY2FsZVk6IFttYXhWYWx1ZSwgbWF4VmFsdWUgLSBzdGVwLCBtYXhWYWx1ZSAtIHN0ZXAgLSBzdGVwXSB9O1xufTtcbiJdfQ==