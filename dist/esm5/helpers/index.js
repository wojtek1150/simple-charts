/**
 * @fileoverview added by tsickle
 * Generated from: helpers/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export var daysDiff = (/**
 * @param {?} start
 * @param {?} end
 * @return {?}
 */
function (start, end) { return Math.round((end - start) / (1000 * 60 * 60 * 24)); });
/** @type {?} */
export var order = (/**
 * @param {?} items
 * @param {?} key
 * @return {?}
 */
function (items, key) { return items.sort((/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */
function (a, b) { return (a[key] > b[key]) ? 1 : ((b[key] > a[key]) ? -1 : 0); })); });
/** @type {?} */
export var max = (/**
 * @param {?} items
 * @param {?} key
 * @return {?}
 */
function (items, key) { return items.reduce((/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */
function (a, b) { return a[key] >= b[key] ? a : b; }), {}); });
/** @type {?} */
export var axisYScale = (/**
 * @param {?} value
 * @return {?}
 */
function (value) {
    if (value <= 15) {
        return { maxValue: 15, scaleY: [15, 10, 5] };
    }
    if (value <= 30) {
        return { maxValue: 30, scaleY: [30, 20, 10] };
    }
    if (value <= 45) {
        return { maxValue: 45, scaleY: [45, 30, 15] };
    }
    if (value <= 60) {
        return { maxValue: 60, scaleY: [60, 40, 20] };
    }
    if (value <= 120) {
        return { maxValue: 120, scaleY: [120, 80, 40] };
    }
    /** @type {?} */
    var maxValue = Math.ceil(value / 100) * 100;
    /** @type {?} */
    var step = Math.ceil(maxValue / 3 / 10) * 10;
    return { maxValue: maxValue, scaleY: [maxValue, maxValue - step, maxValue - step - step] };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ad29qdGVrMTE1MC9zaW1wbGUtY2hhcnRzLyIsInNvdXJjZXMiOlsiaGVscGVycy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNLEtBQU8sUUFBUTs7Ozs7QUFBRyxVQUFDLEtBQUssRUFBRSxHQUFHLElBQUssT0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBakQsQ0FBaUQsQ0FBQTs7QUFDekYsTUFBTSxLQUFPLEtBQUs7Ozs7O0FBQUcsVUFBQyxLQUFLLEVBQUUsR0FBRyxJQUFLLE9BQUEsS0FBSyxDQUFDLElBQUk7Ozs7O0FBQUMsVUFBQyxDQUFDLEVBQUUsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFwRCxDQUFvRCxFQUFDLEVBQTFFLENBQTBFLENBQUE7O0FBQy9HLE1BQU0sS0FBTyxHQUFHOzs7OztBQUFHLFVBQUMsS0FBSyxFQUFFLEdBQUcsSUFBSyxPQUFBLEtBQUssQ0FBQyxNQUFNOzs7OztBQUFDLFVBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSyxPQUFBLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUF4QixDQUF3QixHQUFFLEVBQUUsQ0FBQyxFQUFwRCxDQUFvRCxDQUFBOztBQUN2RixNQUFNLEtBQU8sVUFBVTs7OztBQUFHLFVBQUMsS0FBSztJQUM5QixJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7S0FDOUM7SUFDRCxJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FDL0M7SUFDRCxJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FDL0M7SUFDRCxJQUFJLEtBQUssSUFBSSxFQUFFLEVBQUU7UUFDZixPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FDL0M7SUFDRCxJQUFJLEtBQUssSUFBSSxHQUFHLEVBQUU7UUFDaEIsT0FBTyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDO0tBQ2pEOztRQUNLLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHOztRQUN2QyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUU7SUFDOUMsT0FBTyxFQUFFLFFBQVEsVUFBQSxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsSUFBSSxFQUFFLFFBQVEsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztBQUNuRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZGF5c0RpZmYgPSAoc3RhcnQsIGVuZCkgPT4gTWF0aC5yb3VuZCgoZW5kIC0gc3RhcnQpIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKTtcbmV4cG9ydCBjb25zdCBvcmRlciA9IChpdGVtcywga2V5KSA9PiBpdGVtcy5zb3J0KChhLCBiKSA9PiAoYVtrZXldID4gYltrZXldKSA/IDEgOiAoKGJba2V5XSA+IGFba2V5XSkgPyAtMSA6IDApKTtcbmV4cG9ydCBjb25zdCBtYXggPSAoaXRlbXMsIGtleSkgPT4gaXRlbXMucmVkdWNlKChhLCBiKSA9PiBhW2tleV0gPj0gYltrZXldID8gYSA6IGIsIHt9KTtcbmV4cG9ydCBjb25zdCBheGlzWVNjYWxlID0gKHZhbHVlKTogeyBzY2FsZVk6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgbWF4VmFsdWU6IG51bWJlciB9ID0+IHtcbiAgaWYgKHZhbHVlIDw9IDE1KSB7XG4gICAgcmV0dXJuIHsgbWF4VmFsdWU6IDE1LCBzY2FsZVk6IFsxNSwgMTAsIDVdIH07XG4gIH1cbiAgaWYgKHZhbHVlIDw9IDMwKSB7XG4gICAgcmV0dXJuIHsgbWF4VmFsdWU6IDMwLCBzY2FsZVk6IFszMCwgMjAsIDEwXSB9O1xuICB9XG4gIGlmICh2YWx1ZSA8PSA0NSkge1xuICAgIHJldHVybiB7IG1heFZhbHVlOiA0NSwgc2NhbGVZOiBbNDUsIDMwLCAxNV0gfTtcbiAgfVxuICBpZiAodmFsdWUgPD0gNjApIHtcbiAgICByZXR1cm4geyBtYXhWYWx1ZTogNjAsIHNjYWxlWTogWzYwLCA0MCwgMjBdIH07XG4gIH1cbiAgaWYgKHZhbHVlIDw9IDEyMCkge1xuICAgIHJldHVybiB7IG1heFZhbHVlOiAxMjAsIHNjYWxlWTogWzEyMCwgODAsIDQwXSB9O1xuICB9XG4gIGNvbnN0IG1heFZhbHVlID0gTWF0aC5jZWlsKHZhbHVlIC8gMTAwKSAqIDEwMDtcbiAgY29uc3Qgc3RlcCA9IE1hdGguY2VpbChtYXhWYWx1ZSAvIDMgLyAxMCkgKiAxMDtcbiAgcmV0dXJuIHsgbWF4VmFsdWUsIHNjYWxlWTogW21heFZhbHVlLCBtYXhWYWx1ZSAtIHN0ZXAsIG1heFZhbHVlIC0gc3RlcCAtIHN0ZXBdIH07XG59O1xuIl19